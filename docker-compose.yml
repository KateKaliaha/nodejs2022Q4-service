services:
  node:
    container_name: NodeApp
    image: katekaliaha/docker-basics-node
    # build: .
    restart: on-failure
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - db
    environment:
      - PORT=${PORT}
    volumes:
      - ./src:/app/src
    networks:
      - nesjs-network
    command: ['npm', 'run', 'start:dev']

  db:
    container_name: PostgresDB
    image: katekaliaha/docker-basics-postgres
    # build: ./dataStore
    restart: on-failure
    ports:
      - ${TYPEORM_PORT}:${TYPEORM_PORT}
    environment:
      POSTGRES_USER: ${TYPEORM_USERNAME}
      POSTGRES_PASSWORD: ${TYPEORM_PASSWORD}
      POSTGRES_DB: ${TYPEORM_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - nesjs-network

networks:
  nesjs-network:
    driver: bridge

volumes:
  pgdata:
